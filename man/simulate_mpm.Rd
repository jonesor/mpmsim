% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate_mpm.R
\name{simulate_mpm}
\alias{simulate_mpm}
\title{Simulate a matrix population model (MPM) based on expected values of
transition rates and sample sizes}
\usage{
simulate_mpm(mat_U, mat_F, sample_size, split = TRUE)
}
\arguments{
\item{mat_U}{matrix of mean survival/growth probabilities}

\item{mat_F}{matrix of mean fecundity values}

\item{sample_size}{either (1) a single matrix of sample sizes for each
element of the MPM, (2) a list of two named matrices ("\code{mat_F_ss}",
"\code{mat_U_ss}") containing sample sizes for the survival and fertility
submatrices of the MPM or (3) a single value applied to the whole matrix}

\item{split}{logical, whether to split the output into survival and fecundity
matrices or not}
}
\value{
list of matrices of survival and fecundity if \code{split = TRUE}, otherwise
a single matrix of the sum of survival and fecundity
}
\description{
Simulates a matrix population model based on expected values in the
transition matrix. The expected values are provided in two matrices \code{mat_U}
for the growth/development and survival transitions and \code{mat_F} for the
fecundity transitions. The \code{mat_U} values are simulated based on expected
probabilities, assuming a binomial process with a sample size defined by
\code{sample_size}. The \code{mat_F} values are simulated using a Poisson process with
a sample size defined by \code{sample_size}.Thus users can expect that large
sample sizes will result in simulated matrices that match closely with the
expectations, while simulated matrices with small sample sizes will be more
variable.
}
\details{
if any \code{sample_size} input is 0, it is assumed that the estimate for
the element(s) concerned is known without error.
}
\examples{
mats <- make_leslie_mpm(
  survival = c(0.1, 0.2, 0.5),
  fertility = c(0, 1.2, 2.4),
  n_stages = 3, split = TRUE
)
ssMat <- matrix(10, nrow = 3, ncol = 3)

# Sample size is a single matrix
simulate_mpm(
  mat_U = mats$mat_U, mat_F = mats$mat_F,
  sample_size = ssMat, split = TRUE
)

# Sample size is a single value
simulate_mpm(
  mat_U = mats$mat_U, mat_F = mats$mat_F,
  sample_size = 50, split = TRUE
)

# Sample size is a list of two matrices
ssMats <- list(
  "mat_F_ss" = matrix(10, nrow = 3, ncol = 3),
  "mat_U_ss" = matrix(10, nrow = 3, ncol = 3)
)

simulate_mpm(
  mat_U = mats$mat_U, mat_F = mats$mat_F,
  sample_size = ssMats, split = TRUE
)

}
\seealso{
Other simulation: 
\code{\link{generate_mpm_set}()},
\code{\link{random_mpm}()}
}
\author{
Owen Jones \href{mailto:jones@biology.sdu.dk}{jones@biology.sdu.dk}
}
\concept{simulation}
