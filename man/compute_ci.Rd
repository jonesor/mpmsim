% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute_ci.R
\name{compute_ci}
\alias{compute_ci}
\title{Compute confidence intervals for derived estimates}
\usage{
compute_ci(mat_U, mat_F, sample_size, FUN, ..., n_sim = 1000, dist.out = FALSE)
}
\arguments{
\item{mat_U}{A matrix that describes the growth and survival process.}

\item{mat_F}{A matrix that describes reproduction.}

\item{sample_size}{An integer or a matrix of integers indicating the sample
size(s) to use for the simulation.}

\item{FUN}{A function to apply to each simulated matrix population model.
This function must take, as input, a single matrix population model (i.e.,
the A matrix).}

\item{...}{Additional arguments to be passed to FUN.}

\item{n_sim}{An integer indicating the number of simulations to run. Default
is 1000.}

\item{dist.out}{Logical. If TRUE, returns a list with both the quantiles and
the simulated estimates. Default is FALSE.}
}
\value{
If dist.out is FALSE, a numeric vector of the 2.5th and 97.5th
quantiles of the estimated measures. If dist.out is TRUE, a list with two
elements: "quantiles" and "estimates". "quantiles" is a numeric vector of
the 2.5th and 97.5th quantiles of the estimated measures, and "estimates"
is a numeric vector of the estimated measures.
}
\description{
This function estimates the 95\% confidence interval for measures derived from
a matrix population model. The inputs are the U matrix, which describes the
growth and survival process, and the F matrix which describes reproduction.
The underlying assumption is that the U matrix is the average of a binomial
process while the F matrix is the average of a Poisson process (see the
function \code{simulate_mpm()} for details). The confidence interval will depend
largely on the sample size used.
}
\examples{
# Data for use in example
matU <- matrix(c(
  0.1, 0.0,
  0.2, 0.4
), byrow = TRUE, nrow = 2)

matF <- matrix(c(
  0.0, 3.0,
  0.0, 0.0
), byrow = TRUE, nrow = 2)

# Example of use to calculate 95\% CI of lambda
compute_ci(
  mat_U = matU, mat_F = matF, sample_size = 10, FUN =
    popdemo::eigs, what = "lambda"
)

# Example of use to calculate 95\% CI of generation time
compute_ci(
  mat_U = matU, mat_F = matF, sample_size = 10, FUN =
    popbio::generation.time
)

# Example of use to calculate 95\% CI of generation time,
xx <- compute_ci(
  mat_U = matU, mat_F = matF, sample_size = 100, FUN =
    popbio::generation.time, dist.out = TRUE
)
summary(xx$quantiles)
hist(xx$estimates)

}
\author{
Owen Jones \href{mailto:jones@biology.sdu.dk}{jones@biology.sdu.dk}
}
